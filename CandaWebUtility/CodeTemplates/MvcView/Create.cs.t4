<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>
<#
} else if(IsLayoutPageSelected) {
#>
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
@{
    ViewBag.Title = "Create <#= ViewDataTypeShortName #>";
}
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>


<#
    }
#>

<#
}
#>

<div class="content-wrapper">

@using (Html.BeginForm("Create", "<#= ViewDataTypeShortName #>s", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    

        <h4>@ViewBag.Title</h4>
     
        @Html.ValidationSummary(DeploymentState.IsRelease)
		
    <div class="form-horizontal">




<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {
#>
     

<#
        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }
		
if (property.PropertyName=="RowVersion") {
continue;
}

if (property.PropertyName=="CreatedOn") {
continue;
}

if (property.PropertyName=="ModifiedOn") {
continue;
}

if (property.PropertyName=="ModifiedBy") {
continue;
}

if (property.PropertyName=="CreatedBy") {
continue;
}
			  

        if (property.IsForeignKey) {
#>

 <div class="form-group">
            @Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>", new { @class = "col-md-4 control-label" })
<#
        } else {
#>
 <div class="form-group">
            @Html.LabelFor(model => model.<#= property.PropertyName #>, new { @class = "col-md-4 control-label" })
<#
        }
#>
            <div class="col-md-8">
<#
        if (property.IsForeignKey) {
#>
                @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
<#
        } else {
#>
                @Html.TextBoxFor(model => model.<#= property.PropertyName #>, new { @class = "form-control" })
<#
        }
#>
                @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
            </div>
        </div>

<#
    }
}
#>
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
          </div>
}


</div>

    <div class="back-to-list-wrapper">
        @Html.ActionLink("Back to List", "Index")
    </div>
@Html.Partial("ValidateDisableFix")

<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>


<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>


<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>