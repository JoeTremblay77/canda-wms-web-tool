@model IEnumerable<CandaWebUtility.Models.EditUserViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "All Users";
}
<div class="content-wrapper">
    <h4>All Users</h4>

    @if (User.IsInRole(ApplicationRoles.Admin))
    {

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }

    <div class="grid-container">
        @Html.Grid(Model).Columns(columns =>
{
    if (User.IsInRole(ApplicationRoles.Admin))
    {
        columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { id = o.Id }));
    }
    columns.Add(c => c.Email).Titled("User").Sortable(true).Filterable(true);
    columns.Add(c => c.UserType).Titled("Type").Sortable(true).Filterable(true);
    if (User.IsInRole(ApplicationRoles.Admin))
    {
        columns.Add().Encoded(false).Sanitized(false).SetWidth(180).RenderValueAs(o => Html.ActionLink("Resend Confirmation", "ResendEmailConfirmation", new { id = o.Id }, new { onclick = "return confirm('Resend Confirmation?');" }));
    }
    columns.Add(c => c.EmailConfirmed).Titled("Email Confirmed").Sortable(true).Filterable(true);

    columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(o => Html.ActionLink("Details", "Details", new { id = o.Id }));

    if (User.IsInRole(ApplicationRoles.Admin))
    {

        columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(o => Html.ActionLink("Delete", "Delete", new { id = o.Id }, new { onclick = "return confirm('Delete this?');" }));
    }
}).WithPaging(1000).Sortable(true).Filterable(true).WithMultipleFilters()
    </div>
</div>