@model CandaWebUtility.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset Password";
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)
    @Html.HiddenFor(model => model.Email)
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Model.Email
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password1, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Html.PasswordFor(m => m.Password1, new { @class = "form-control" })
        </div>
        <div class="col-md-3">
            @Html.ValidationMessageFor(m => m.Password1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="password-checker col-md-3" id="MinLength">
            Min Length @Defaults.MinPasswordLength.ToString()
        </div>

        <div class="password-checker col-md-3" id="NonLetterDigit">
            Symbol
        </div>
        <div class="password-checker col-md-3" id="Digit">
            Digit
        </div>

        <div class="password-checker col-md-3" id="Lowercase">
            Lowercase
        </div>
        <div class="password-checker col-md-3" id="Uppercase">
            Uppercase
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password2, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Html.PasswordFor(m => m.Password2, new { @class = "form-control" })
        </div>
        <div class="col-md-3">
            @Html.ValidationMessageFor(m => m.Password2, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="password-checker col-md-3" id="Matches">
            Matches
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            <input type="submit" value="Reset" class="btn btn-default" id="SignInBtn" style="display:none;" />
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        var green = "#5f9d65";
        var red = "#B96F6F";

        $("#Password1").keyup(function () {

            if ($('#Password2').is(':enabled')) {
                $("#Password2").attr("disabled", true);
                $("#Password2").val('');
                $("#SignInBtn").css("display", "none");
                $("#Matches").css("background-color", "white");
                $("#Matches").css("border", "2px solid #E0E0E0");
                $("#Matches").css("color", red);
            }

            var result = false;

            var VAL = this.value.trim();
            VAL = VAL.replace(" ", "");

            var MinLength = new RegExp('^.{@Defaults.MinPasswordLength.ToString(),}$');
            var r = test(MinLength, "#MinLength", VAL);
            if (r) {
                result = true;
            }

            var Digit = new RegExp('[0-9]{1,}');
            r = test(Digit, "#Digit", VAL);
            if (r === false) {
                result = false;
            }

            var Lowercase = new RegExp('[a-z]{1,}');
            r = test(Lowercase, "#Lowercase", VAL);
            if (r === false) {
                result = false;
            }

            var Uppercase = new RegExp('[A-Z]{1,}');
            r = test(Uppercase, "#Uppercase", VAL);
            if (r === false) {
                result = false;
            }

            var NonLetterDigit = new RegExp('[^a-zA-Z0-9]{1,}');
            r = test(NonLetterDigit, "#NonLetterDigit", VAL);
            if (r === false) {
                result = false;
            }

            this.value = VAL;

            if (result === true) {
                $("#Password2").attr("disabled", false);
            }
            else {
                $("#Password2").attr("disabled", true);
                $("#Password2").val('');
            }
        });

        function test(reg, id, val) {
            var result = false;

            var e = $(id);

            if (reg.test(val)) {
                e.css("background-color", green);
                e.css("border", "2px solid " + green);
                e.css("color", "white");
                result = true;
            }
            else {
                e.css("background-color", "white");
                e.css("border", "2px solid #E0E0E0");

                e.css("color", red);
            }

            return result;
        }

        $("#Password2").keyup(function () {

            // check against  pass1
            var p1 = $("#Password1").val();
            var p2 = $("#Password2").val();

            // if match show button
            if (p1 === p2) {

                $("#Matches").css("background-color", green);
                $("#Matches").css("border", "2px solid " + green)
                $("#Matches").css("color", "white");
                $("#SignInBtn").css("display", "");
            }
            else {
                $("#Matches").css("background-color", "white");
                $("#Matches").css("border", "2px solid #E0E0E0");
                $("#Matches").css("color", red);
                $("#SignInBtn").css("display", "none");
            }

        });

    });
</script>
@Html.Partial("ValidateDisableFix")